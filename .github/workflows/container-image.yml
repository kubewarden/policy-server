name: Build container image
on:
  workflow_call:
    inputs:
      push-image:
        type: boolean
        required: true
    outputs:
      repository:
        description: "Repository used to build the container image"
        value: ${{ jobs.build.outputs.repository }}
      tag:
        description: "Tag used to build the container image"
        value: ${{ jobs.build.outputs.tag }}
      artifact:
        description: "Uploaded artifact with the container tarball"
        value: ${{ jobs.build.outputs.artifact }}


jobs:
  build:
    name: Build container image
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.setoutput.outputs.repository }}
      tag: ${{ steps.setoutput.outputs.tag }}
      artifact: ${{ steps.setoutput.outputs.artifact }}
    permissions:
      packages: write
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Retrieve tag name
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          echo TAG_NAME=latest >> $GITHUB_ENV
      -
        name: Retrieve tag name
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
            echo TAG_NAME=$(echo $GITHUB_REF | sed -e "s|refs/tags/||") >> $GITHUB_ENV
      -
        name: Build and push development container image
        if: ${{ inputs.push-image }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64 #, linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/policy-server:${{ env.TAG_NAME }}
      -
        # Only build amd64 because buildx does not allow multiple platforms when
        # exporting the image to a tarball. As we use this only for end-to-end tests
        # and they run on amd64 arch, let's skip the arm64 build for now.
        name: Build linux/amd64 container image
        if: ${{ inputs.push-image == false }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          outputs: type=docker,dest=/tmp/policy-server-image-${{ env.TAG_NAME }}.tar
          tags: |
            ghcr.io/${{github.repository_owner}}/policy-server:${{ env.TAG_NAME }}
      -
        name: Upload container image to use in other jobs
        if: ${{ inputs.push-image == false }}
        uses: actions/upload-artifact@v2
        with:
          name: policy-server-image-${{ env.TAG_NAME }}
          path: /tmp/policy-server-image-${{ env.TAG_NAME }}.tar
      -
        id: setoutput
        name: Set output parameters
        run: |
          echo "::set-output name=repository::ghcr.io/${{github.repository_owner}}/policy-server"
          echo "::set-output name=tag::${{ env.TAG_NAME }}"
          echo "::set-output name=artifact::policy-server-image-${{env.TAG_NAME}}"
